package 每日一题.二叉树平衡检查;

import sun.reflect.generics.tree.Tree;

import java.util.*;


class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;
    public TreeNode(int val) {
        this.val = val;
    }
}
class Balance {

    public int isBalance1(TreeNode root){
        if(root.left == null && root.right == null)
            return 1;
        if(root == null)
            return 0;
        int left = isBalance1(root.left);
        int right = isBalance1(root.right);
        if(Math.abs(left-right)>1 || left == -1 || right == -1)
            return -1;
        if(right > left)
            return right+1;
        else
            return left+1;
    }

    public boolean isBalance(TreeNode root) {
        int depth = 1;
        int result = isBalance1(root);
        if(result != -1)
            return true;
        else
            return false;
    }
}

public class Main {
    public static void main(String[] args) {

    }
}
